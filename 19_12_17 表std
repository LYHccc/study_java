create table student
(
	name varchar(20),
	sn int,
	mysqlScore int,
	englishScore double(5, 2),
	javaScore smallint
);

//单行数据，插入指定列
insert into student(name) values('王');
insert into student(mysqlScore, englishScore, javaScore) values(100, 99, 100);
insert into student(name, sn, mysqlScore, englishScore, javaScore) values('王11', 008, 100, 99, 100);
insert into student(name, sn, mysqlScore, englishScore, javaScore) values('刘1', 008, 100, 99, 100);

//多行数据，插入指定列
insert into student(name, sn, englishScore, javaScore) values
	('王1', 001, 100, 98),
	('王2', 002, 100, 97);
insert into student(name, sn, mysqlScore, englishScore, javaScore) values
	('王1', 001, 100, 99, 98),
	('王2', 002, 76, 96, 98),
	('王3', 003, 80, 93, 91),
	('王4', 004, 85, 91, 92),
	('王5', 005, 90, 90, 99);
insert into student(name, sn, mysqlScore, englishScore, javaScore) values
	('张1', 010, 56, 88, 91),
	('李1', 020, 91, 77, 59),
	('黄3', 030, 77, 55, 67);
	
//查询全列
select * from student;

//查询指定列
select name, sn, mysqlScore from student;

//查询字段为表达式
select name, sn, mysqlScore + 1 from student; //所有的mysqlScore成绩 + 1
select mysqlScore + englishScore + javaScore from student; //查询将所有成绩加起来(如果有一个成绩为null，那么所有成绩加起来的和也是null(无论其他成绩是多少))

//添加别名
select mysqlScore + englishScore + javaScore as total_score from student;
select 1 as name, sn, mysqlScore + englishScore + javaScore as total_score from student;

//对某列去掉重复行
select distinct englishScore from student;

//查询所有列对某列进行排序(默认升序asc)
select * from student order by javaScore;

//降序(desc)排列
select * from student order by javaScore desc;

//按总成绩降序排名
select * from student order by mysqlScore + englishScore + javaScore desc;

//查找英语成绩大于95的所有学生信息
select * from student where englishScore > 95;

//查找英语成绩大于95并且mysql成绩也大于95的所有学生信息
select * from student where englishScore > 95 and mysqlScore > 95;

//查找英语成绩大于95或者java成绩大于95的所有学生信息
select * from student where englishScore > 95 or javaScore > 95;

//关于or和and的优先级问题（and优先级较高）
select * from student where englishScore > 95 or javaScore > 95 and mysqlScore > 95;
select * from student where (englishScore > 95 or javaScore > 95) and mysqlScore > 95;

//查找姓王的学生信息
select * from student where name like '王%';

//查找英语成绩在[60, 80]之间的学生信息
select * from student where englishScore between 60 and 80;

//将英语成绩大于97的学生姓名改为'peter',学号改为17060103
update student set name = 'peter', sn = 17060103 where englishScore > 97;

//将姓名为'peter'并且sn为17060103的学生姓名改为'new'、sn改为170601
update student set name = 'new', sn = 170601 where name = 'peter' and sn = 17060103;

//将英语成绩小于60的学生成绩 + 10
update student set englishScore = englishScore + 10 where englishScore < 60;

//将总成绩排名倒数三个的mysqlScore + 30
update student set mysqlScore = mysqlScore + 30 order by englishScore + javaScore + mysqlScore limit 3;

//查询英语成绩是96,97,98,99其中一个的学生信息
select * from student where englishScore in(96, 97, 98, 99);

delete from student order by englishScore + javaScore + mysqlScore limit 1;